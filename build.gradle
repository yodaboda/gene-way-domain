buildscript { repositories { mavenCentral() }} // needed for google-java-format


apply plugin: 'java-library'




//apply from: "https://raw.githubusercontent.com/yodaboda/gene-way-shared/master/config.gradle"
apply from: "../gene-way-shared/config.gradle"



jar {
	from ('src') {
    	include 'META-INF/persistence.xml'
  	}
    manifest {
        attributes 'compile-Title': 'Gene-Way domain',
                   'compile-Version': project.ext.version
    }
}

archivesBaseName = "gene-way-domain"

configurations { 
	providedCompile
	glassfishRemoteTestRuntime { extendsFrom testRuntime }
}


dependencies {
	api "org.hibernate:hibernate-entitymanager:$ver.hibernate"
	api "org.hibernate:hibernate-core:$ver.hibernate"
	implementation "org.hibernate:hibernate-c3p0:$ver.hibernate"
	implementation 'c3p0:c3p0:0.9.1.2'
	implementation "org.hibernate:hibernate-validator:$ver.hibernateValidator"
	implementation "org.slf4j:slf4j-log4j12:1.7.25"
	implementation 'org.mariadb.jdbc:mariadb-java-client:1.1.7'
	//Change with mariadb since it has GPL 2 license
	implementation 'mysql:mysql-connector-java:8.0.13'
	
	
	compile 	fileTree(dir: '../gene-way-shared/build/libs', include: ['*.jar'])	
	//implementation 'com.gene-play:gene-way-shared:0.4.7'
	
	glassfishRemoteTestRuntime "junit:junit:4.12" 
	glassfishRemoteTestRuntime 'org.mockito:mockito-core:2.23.0'
	glassfishRemoteTestRuntime 'javax.persistence:javax.persistence-api:2.2'
	glassfishRemoteTestRuntime 'javax.validation:validation-api:2.0.1.Final'
	glassfishRemoteTestRuntime 'javax.inject:javax.inject:1'
	glassfishRemoteTestRuntime 'javax.transaction:jta:1.1'
	glassfishRemoteTestRuntime 'org.jboss.arquillian:arquillian-bom:1.4.1.Final'
	glassfishRemoteTestRuntime 'org.jboss.arquillian.junit:arquillian-junit-container:1.4.1.Final'
	glassfishRemoteTestRuntime 'org.jboss.arquillian.container:arquillian-container-spi:1.4.1.Final'	
	glassfishRemoteTestRuntime 'org.jboss.arquillian.container:arquillian-glassfish-remote-3.1:1.0.2'
	
}

sourceSets {
	main.compileClasspath += configurations.providedCompile
	test.compileClasspath += configurations.providedCompile
	test.runtimeClasspath += configurations.providedCompile
	
	main.compileClasspath += configurations.glassfishRemoteTestRuntime
	test.compileClasspath += configurations.glassfishRemoteTestRuntime
	test.runtimeClasspath += configurations.glassfishRemoteTestRuntime

//	test.resources.srcDirs += 'src/test/resources'
	test.resources.srcDirs += 'src/test/resources-glassfish-remote'	
}

task glassfishRemoteTest(type: Test) {
   testClassesDirs = sourceSets.test.output.classesDirs
   classpath = sourceSets.test.output + sourceSets.main.output + configurations.glassfishRemoteTestRuntime
}

eclipse {
	classpath {
		plusConfigurations += [ configurations.providedCompile ]
		plusConfigurations += [ configurations.glassfishRemoteTestRuntime ]
	}
}

sourceCompatibility = 1.8